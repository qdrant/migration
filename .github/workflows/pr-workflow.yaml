name: PR Workflow
on:
  pull_request:
    types: [ synchronize, opened, reopened]
    branches: [ 'main' ]
env:
  TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2

jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Sets a timeout of 10 minutes for this job (default is 1 minute)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: false

      - name: Check Go Formatting
        run: |
          files=$(gofmt -l .) && echo $files && [ -z "$files" ]

      - name: Golang CI Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.2 # Specify the golangci-lint version, so we are stable
          args: --timeout 10m # Increase the timeout to 10 minutes

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: go.sum

      - name: Unit tests
        run: |
          make test_unit

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract build info
        id: extract_build_info
        run: |
          echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          echo "commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            registry.cloud.qdrant.io/library/qdrant-migration
          tags: |
            type=raw,value=dev

      - name: Build and push container image
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          context: .
          push: false
          load: true
          sbom: false
          provenance: false
          platforms: linux/amd64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=dev
            BUILD=${{ steps.extract_build_info.outputs.commit_short }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: registry.cloud.qdrant.io/library/qdrant-migration:dev
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.11.1

      - name: Integration tests
        run: make test_integration
